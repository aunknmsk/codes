%{
#include <stdio.h>

int regs[26];
int base;

%}

%start list           // start  :  list used as start symbol instead of S

%token DIGIT LETTER // two tokens usedletter and digiit

%left '|'                   // associativity of operators written in increasing order of precendence
%left '&'
%left '+' '-'
%left '*' '/' '%'
%left UMINUS  /*supplies precedence for unary minus */

%%                   /* beginning of rules section */

list:                       /*empty */
         |list stat '\n'
         |list error '\n'{yyerrok;}
         ;

stat:    expr
         {
           printf("%d\n",$1);
         }
         |
         LETTER '=' expr
         {
           regs[$1] = $3;
         }

         ;

expr:    '(' expr ')'{$$ = $2;}
         |expr '*' expr{$$ = $1 * $3;}
         |
         expr '/' expr
         {
           $$ = $1 / $3;
         }
         |
         expr '%' expr
         {
           $$ = $1 % $3;
         }
         |
         expr '+' expr
         {
           $$ = $1 + $3;
         }
          |

         expr '-' expr
         {
           $$ = $1 - $3;
         }
         |
         expr '&' expr
         {
           $$ = $1 & $3;
         }
         |
         expr '|' expr
         {
           $$ = $1 | $3;
         }
         |

        '-' expr %prec UMINUS
         {
           $$ = -$2;
         }
         |
         LETTER
         {
           $$ = regs[$1];
         }
       
         ;



%%
main()
{
 return(yyparse());                    
}

yyerror(s)                             
char *s;
{
  fprintf(stderr, "%s\n",s);
}

yywrap()                                          
{
  return(1);
}


