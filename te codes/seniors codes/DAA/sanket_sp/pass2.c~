#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<ctype.h>

struct symbol_table
{
	char symbol[7];
	int address;
	int length;
}ST[20];


struct intermediate_code
{
	int lc;
	char type1[8],code1[8];
	char type2[8],code2[8];
	char type3[8],code3[8];
}IC[20];


struct literal_table
{
	char literal[7];
	int address;
}LT[20];

struct pool_table
{
	int literal_no;
}PT[20];

char s1[20],s2[20],s3[20],s4[20],s5[20],s6[20],s7[20];
int iIC = 0;

void code()
{
	int i;
	printf("\nMachine code");
	for(i=0;i<iIC;i++)
	{
		switch(IC[i].type1[0])
		{
			case 'D':
				if(strcmp(IC[i].code1,"01")==0)
					printf("\n%d) + 00 0 00%s",IC[i].lc,IC[i].code2);
				break;
			case 'A':
				break;
			case 'I':
				if(strcmp(IC[i].code1,"00")==0)	//stop
					printf("\n%d) + 00 0 000",IC[i].lc);
				else
				{
					printf("\n%d) + %s",IC[i].lc,IC[i].code1);
				if(strcmp(IC[i].type2,"S")!=0) //(strcmp(IC[i].type2,"RG")==0 || strcmp(IC[i].type2,"CC") ==0)
						printf(" %d",atoi(IC[i].code2));	// for 1st operand register or condition
					else
						printf(" 0 %d",ST[atoi(IC[i].code2)].address);	//for read and print
						
					if(strcmp(IC[i].type3,"L")==0)
						printf(" %d",LT[atoi(IC[i].code3)].address);
					else if(strcmp(IC[i].type3,"S")==0)
						printf(" %d",ST[atoi(IC[i].code3)].address);
				}
				break;
		}
	}
}

void init()
{
	strcpy(s1,"");
	strcpy(s2,"");
	strcpy(s3,"");
	strcpy(s4,"");
	strcpy(s5,"");
	strcpy(s6,"");
	strcpy(s7,"");
}

int count = 0; 

int main()
{
	FILE *fp;
	int i,j;
	
	fp = fopen("literal.txt","r");
	j=0;
	printf("\nLITERAL TABLE");
	while(fscanf(fp,"%s%s",s1,s2)!=-1)
	{
		strcpy(LT[j].literal,s1);
		LT[j].address=atoi(s2);
		printf("\n%s  %d",LT[j].literal,LT[j].address);
		j++;
	}
	
	printf("\n");
	fclose(fp);
	
	
	fp = fopen("symbol.txt","r");
	j=0;
	printf("\nSYMBOL TABLE");
	while(fscanf(fp,"%s%s%s",s1,s2,s3)!=-1)
	{
		strcpy(ST[j].symbol,s1);
		ST[j].address = atoi(s2);
		ST[j].length = atoi(s3);
		printf("\n%7s  %3d  %3d",ST[j].symbol,ST[j].address,ST[j].length);
		j++;
	}	
	printf("\n");
	
	fp = fopen("pooltable.txt","r");
	j=0;
	printf("\nPool Table");
	while(fscanf(fp,"%s",s1)!=-1)
	{
		PT[j].literal_no = atoi(s1);
		printf("\n%d",PT[j].literal_no);
		j++;
	}
	printf("\n");
	
	init();
	fp = fopen("ic.txt","r");
	char newline[20];
	
	j=0;
	/*
	printf("\nIntermediate code");
	while(!feof(fp))
	{
		i=0;
		newline[i] = fgetc(fp);
		while(newline[i]!='\n' && newline[i]!=EOF)
		{
			if(!isalnum(newline[i]))
				newline[i] = ' ';
			
			i++;
			newline[i] = fgetc(fp);
		}
		newline[i]='\0';
		
		
		
		int count=sscanf(newline,"%s%s%s%s%s%s%s",s1,s2,s3,s4,s5,s6,s7);
		if(count==-1)
			continue;
		IC[j].lc = atoi(s1);
		strcpy(IC[j].type1,s2);
		strcpy(IC[j].code1,s3);
		strcpy(IC[j].type2,s4);
		strcpy(IC[j].type2,s5);
		strcpy(IC[j].type3,s6);
		strcpy(IC[j].code3,s7);
	
printf("\n%2d %3s %3s %3s %3s %3s %3s",IC[j].lc,IC[j].type1,IC[j].code1,IC[j].type2,IC[j].code2,IC[j].type3,IC[j].code3);
		j++;
		
	}
	fclose(fp);
	iIC = j;
	code();*/
	
	
	
	fp=fopen("ic.txt","r");
	j=0;
	printf("\nIntermediate code\n");
	while(!feof(fp))
	{
		i=0;
		newline[i]=fgetc(fp);
		while(newline[i]!='\n'&& newline[i]!=EOF )
		{
			if(!isalnum(newline[i]))
				newline[i]=' ';
			i++;
			newline[i]=fgetc(fp);
		}
		newline[i]='\0';
		init();
		count=sscanf(newline,"%s%s%s%s%s%s%s",s1,s2,s3,s4,s5,s6,s7);
		if(count==-1)
			continue;
		IC[j].lc=atoi(s1);
		strcpy(IC[j].type1,s2);
		strcpy(IC[j].code1,s3);
		strcpy(IC[j].type2,s4);
		strcpy(IC[j].code2,s5);
		strcpy(IC[j].type3,s6);
		strcpy(IC[j].code3,s7);
		printf("%d %s %s %s %s %s %s\n",IC[j].lc,IC[j].type1,IC[j].code1,IC[j].type2,IC[j].code2,IC[j].type3,IC[j].code3);
		j++;
	}
	iIC=j;
	fclose(fp);
	mcode();
	return 0;
	
}





